{
  "hash": "a0c104214651672189083731b4b46126",
  "result": {
    "markdown": "---\ntitle: \"Introduction to Stata: The Basics\"\nauthor: \"Rony Rodriguez-Ramirez\"\ndate: \"2024-02-01\"\n---\n\n::: {.cell}\n\n:::\n\n\n## Introduction\n\nStata is a comprehensive statistical software package for data management, analysis, and graphics. It's widely used in research, particularly in the social sciences. This tutorial will guide you through the basics of Stata, including data manipulation, basic statistical analysis, and creating simple graphs.\n\n## Getting Started\n\nWhen you open Stata, you'll see the main interface, which includes the Command window, the Results window, the Variables window, and the Properties window. You can execute commands directly in the Command window or use do-files (scripts) for reproducibility.\n\n## Loading your dataset\n\nLet's start by loading the census data using the `syuse` command:\n\n\n::: {.cell collectcode='true'}\n\n```{.stata .cell-code}\nsysuse census, clear\ndescribe\n```\n\n\n::: {.cell-output .cell-output-stdout}\n```\n. sysuse census, clear\n\n(1980 Census data by state)\n\n. describe\n\nContains data from C:\\PROGRA~1\\Stata18\\ado\\base/c/census.dta\n Observations:            50                  1980 Census data by state\n    Variables:            13                  6 Apr 2022 15:43\n-------------------------------------------------------------------------------\nVariable      Storage   Display    Value\n    name         type    format    label      Variable label\n-------------------------------------------------------------------------------\nstate           str14   %-14s                 State\nstate2          str2    %-2s                  Two-letter state abbreviation\nregion          int     %-8.0g     cenreg     Census region\npop             long    %12.0gc               Population\npoplt5          long    %12.0gc               Pop, < 5 year\npop5_17         long    %12.0gc               Pop, 5 to 17 years\npop18p          long    %12.0gc               Pop, 18 and older\npop65p          long    %12.0gc               Pop, 65 and older\npopurban        long    %12.0gc               Urban population\nmedage          float   %9.2f                 Median age\ndeath           long    %12.0gc               Number of deaths\nmarriage        long    %12.0gc               Number of marriages\ndivorce         long    %12.0gc               Number of divorces\n-------------------------------------------------------------------------------\nSorted by: \n\n. \n```\n:::\n:::\n\n\n::: {.callout-tip}\nThe `sysuse` command in Stata is designed for accessing datasets that come pre-installed with Stata, facilitating learning and demonstration without the need for external data. In contrast, the `use` command is utilized for loading user-provided datasets from the local filesystem or specified paths, serving as the primary method for importing data for analysis. \n\nEssentially, `sysuse` accesses Stata's built-in examples, while `use` handles real-world data from external sources.\n:::\n\nThe `describe` commmand produces a summary of the dataset in memory or of the data stored in a Stata-format dataset.\n\n## Basic Commands\n\n### Generating new varianles\n\nIn Stata, you can create new variables using the `generate` (or `gen` for short) command.\n\n#### Example\n\n\n::: {.cell}\n\n```{.stata .cell-code}\n* Assigning value 10 to variable x\ngen x = 10\n```\n:::\n\n\n\n## Understanding Data Types in Stata\n\nStata handles various data types, including numeric, string, and date. It automatically determines the appropriate type when data is loaded or generated.\n\n### Numeric\n\nNumeric variables in Stata can represent both integers and floating-point numbers.\n\n\n::: {.cell}\n\n```{.stata .cell-code}\n* Defining numeric variables\ngen my_integer = 42\ngen my_double  = 42.5\n```\n:::\n\n\nDifferent from R, both variables here are \"float.\"\n\n### String\n\nString variables are used for text and are defined using quotes.\n\n\n::: {.cell}\n\n```{.stata .cell-code}\n* Defining a string variable\ngen my_string = \"Hello, world! I love econometrics!\"\n```\n:::\n\n\n### Date\n\nDate variables in Stata are numeric, with a specific format applied to display them as dates.\n\n\n::: {.cell}\n\n```{.stata .cell-code}\n* Defining a date variable\ngen my_date = date(\"2024-01-01\", \"YMD\")\nformat my_date %td\n```\n:::\n\n\n\n## Basic Stata Operations\n\nStata can perform calculations and data manipulations directly in the command line or through do-files.\n\n\n::: {.cell}\n\n```{.stata .cell-code}\n* Simple calculation\ndisplay 2 + 2\n```\n:::\n\n\n## Importing Data\n\nTo import CSV files in Stata, use the `import delimited` command.\n\n\n::: {.cell}\n\n```{.stata .cell-code}\n* Importing data from CSV\nimport delimited \"path/to/your/file.csv\", clear\n```\n:::\n\n\n## Using Stata's Commands for Data Manipulation\n\nStata offers a wide range of commands for data manipulation, including `filter` (conditions for keeping observations), `generate` and `replace` (for creating and modifying variables), and `summarize` (for basic descriptive statistics).\n\n### Summarizing Data\n\n`summarize` provides descriptive statistics for variables.\n\n\n::: {.cell output.lines='[-1,-2,-3,-4,-5]'}\n\n```{.stata .cell-code}\n* Summarizing population\nsummarize pop\n```\n\n\n::: {.cell-output .cell-output-stdout}\n```\n...\n. * Summarizing population\n. summarize pop\n\n    Variable |        Obs        Mean    Std. dev.       Min        Max\n-------------+---------------------------------------------------------\n         pop |         50     4518149     4715038     401851   2.37e+07\n\n. \n...\n```\n:::\n:::\n\n\n\n### Filtering Data\n\nIn Stata, you use `keep` if or `drop` if to filter data.\n\n\n::: {.cell}\n\n:::\n\n\n### Modifying Variables\n\nUse `generate` to create new variables and `replace` to modify existing ones.\n\n\n::: {.cell}\n\n:::\n\n\n## Graphing\n\nThe `scatter` command, for example, is used for scatterplots and line graphs.\n\n\n\n::: {.cell}\n\n```{.stata .cell-code}\n* Creating a simple scatterplot\nscatter pop death\n```\n:::\n\n\n![Pop ~ Death](scatter.svg)\n\n## Getting Help\n\nStata has a comprehensive help system accessible through the `help` command.\n\n\n::: {.cell}\n\n```{.stata .cell-code}\n* Getting help on the summarize command\nhelp summarize\n```\n:::\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}